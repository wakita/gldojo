function configure(config_path, argv) {
  var config = {
    glfw: {
      title: "An OpenGL application",
      windowSize: [ 800, 600 ],
      version: [ 4, 1 ],
      sampleRate: 0,
      // flags
      visible:    true,
      fullscreen: false,
      vsync:      false,
      cursor:     true,
      stereo:     false,
      debug:      true
    },
    trace: false
  };

  argv.forEach(function (arg) {
    var flagname;
    if (arg[0] == '+' || arg[0] == '-') {
      var value = arg[0] == '+';
      var args = arg.substring(1).split('.');
      var key = args.pop();
      args.reduce(function (p, k) {
        if (!p[k]) p[k] = {};
        return p[k];
      }, config)[key] = value;
      console.log(key, value);
    } else {
      try { require(arg).configure(config); }
      catch (e) {
        console.error('Failed to load module [' + arg + '] not found for the following reason.');
        console.error('    ', e);
        console.error('    Ignored');
      }
    }
  });

  var fs = require('fs');

  if (config.app && config.app.shaders) {
    config.app.shaders.forEach(function (shaders, i, array) {
      spec = fs.readFileSync(shaders, { encoding: 'utf8' }).split(/==> .*\.([a-z]*) <==/);
      var shaderset = {};
      for (var j = 1; j < spec.length; j += 2) {
        shaderset[spec[j]] = spec[j+1];
      }
      array[i] = shaderset;
    });
  }

  fs.writeFileSync(config_path, JSON.stringify(config, null, 2));
};

exports.configure = configure;

==> kw8.vs <==
#version 430

uniform mat4  MVP;
uniform float PointSize;

layout (location = 0) in vec3 position_vs;

void main() {
  gl_Position = MVP * vec4(position_vs, 1);
  gl_PointSize = PointSize / gl_Position.w;
}

==> kw8.fs <==
#version 430

uniform  vec3 Light;

in  vec2  gl_PointCoord;

out vec4 FragColor;

void main() {
  vec3 normal = vec3(gl_PointCoord * 2.0 - 1.0, 0);
  normal.z = 1.0 - dot(normal.xy, normal.xy);
  if (normal.z < 0) discard;
  normal.z = sqrt(normal.z);
  float luminance = dot(Light, normalize(normal));

  FragColor = vec4(vec3(luminance) * 0.8 + vec3(0.2, 0.2, 0.5), 1);
}
